#!/bin/bash
if [ "$1" = "on" ]; then

	firewall off
	
	iptables -P INPUT DROP
	iptables -P FORWARD DROP
	iptables -P OUTPUT DROP
	# ICMP (Ping)
	iptables -A INPUT -p icmp -j ACCEPT

	# IP Tristiisch
	# iptables -A INPUT -s 78.240.110.83 -p udp --dport 1194 -j ACCEPT
	#iptables -A INPUT -s 77.203.207.174 -j ACCEPT
	# iptables -A FORWARD -s 78.240.110.83 -j ACCEPT

	# Mysql
	iptables -A INPUT -p tcp --dport 3306 -j ACCEPT

	# Autoriser le port web
	iptables -A INPUT -p tcp --dport 80 -j ACCEPT
	iptables -A INPUT -p tcp --dport 8085 -j LOG
	
	# Autoriser le port shh
	iptables -A INPUT -p tcp --dport 22 -j ACCEPT

	# Autoriser le port Minecraft
	iptables -A INPUT -p tcp --dport 25565 -j ACCEPT
	# iptables -A INPUT -p tcp --dport 25521 -j ACCEPT
	# iptables -A INPUT -p tcp --dport 25564 -j ACCEPT
	
	# Autoriser le port Dynmap
	iptables -A INPUT -p tcp --dport 8123 -j ACCEPT

	# Autoriser les ports Teamspeak
	iptables -A INPUT -m udp -p udp --dport 9987 -j ACCEPT
	iptables -A INPUT -m udp -p udp --dport 9988 -j ACCEPT
	iptables -A INPUT -p tcp --dport 30033 -j ACCEPT
	iptables -A INPUT -p tcp --dport 10011 -j ACCEPT
	iptables -A INPUT -p tcp --dport 10022 -j ACCEPT

	# Sinusbot
	iptables -A INPUT -p tcp --dport 8087 -j ACCEPT
	
	# DNS In/Out
	# iptables -A OUTPUT -p tcp --dport 53 -j ACCEPT
	# iptables -A OUTPUT -p udp --dport 53 -j ACCEPT
	# iptables -A INPUT -p tcp --dport 53 -j ACCEPT
	# iptables -A INPUT -p udp --dport 53 -j ACCEPT

	# NTP Out
	iptables -A OUTPUT -p udp --dport 123 -j ACCEPT

	# Permettre à une connexion ouverte de recevoir du trafic en entrée.
	iptables -A INPUT -m state --state ESTABLISHED -j ACCEPT
	 
	# Permettre à une connexion ouverte de recevoir du trafic en sortie.
	iptables -A OUTPUT -m state ! --state INVALID -j ACCEPT

	# Ne pas casser les connexions etablies
	iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
	iptables -A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

	# On log les paquets en entrée.
	iptables -A INPUT -j LOG
	# On log les paquets en sortie.
	iptables -A OUTPUT -j LOG
	# On log les paquets forward
	iptables -A FORWARD -j LOG
	
	
	echo -e "\e[32mFirewall Règle d'ouverture activé\e[0m"
	
elif [ "$1" = "off" ]; then

	iptables -t nat -F
	iptables -t mangle -F
	iptables -F
	iptables -X
	#iptables -P INPUT ACCEPT
	#iptables -P FORWARD ACCEPT
	#iptables -P OUTPUT ACCEPT

	echo -e "\e[32mFirewall désactiver\e[0m"

elif [ "$1" = "ddos" ]; then

	# Interdire toute connexion entrante et sortante
	iptables -P INPUT DROP
	iptables -P FORWARD DROP
	iptables -P OUTPUT DROP
	 
	# On drop les scans XMAS et NULL.
	iptables -A INPUT -p tcp --tcp-flags FIN,URG,PSH FIN,URG,PSH -j DROP
	iptables -A INPUT -p tcp --tcp-flags ALL ALL -j DROP
	iptables -A INPUT -p tcp --tcp-flags ALL NONE -j DROP
	iptables -A INPUT -p tcp --tcp-flags SYN,RST SYN,RST -j DROP
	 
	# Dropper silencieusement tous les paquets broadcastés.
	iptables -A INPUT -m pkttype --pkt-type broadcast -j DROP
	 
	# Permettre à une connexion ouverte de recevoir du trafic en entrée.
	iptables -A INPUT -m state --state ESTABLISHED -j ACCEPT
	 
	# Permettre à une connexion ouverte de recevoir du trafic en sortie.
	iptables -A OUTPUT -m state ! --state INVALID -j ACCEPT

	# Ne pas casser les connexions etablies
	iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
	iptables -A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

	# On accepte la boucle locale en entrée.
	iptables -I INPUT -i lo -j ACCEPT
	 
	# On log les paquets en entrée.
	iptables -A INPUT -j LOG

	# Autoriser loopback
	iptables -A INPUT -i lo -j ACCEPT
	iptables -A OUTPUT -o lo -j ACCEPT

	echo -e "\e[32mFirewall Règle de protection activé\e[0m"

elif [ "$1" = "test" ]; then
	firewall ddos
	firewall on
	echo "Si tous fonctionne encore, faire CTRL + C pour kill la commande, au bout de 60s le firewall se désactive automatique sinon"
	sleep 60
	firewall off
fi
